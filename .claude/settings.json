{
  "defaultMode": "acceptEdits",
  "permissions": {
    "allow": [
      "Edit",
      "Write",
      "Read",
      "Bash(pip install:*)",
      "Bash(ruff:*)",
      "Bash(git status:*)",
      "Bash(git diff:*)",
      "Bash(git log:*)",
      "Bash(ls:*)",
      "Bash(mkdir:*)",
      "Bash(source:*)",
      "WebSearch",
      "WebFetch"
    ],
    "deny": [
      "Bash(rm -rf *)",
      "Bash(sudo:*)",
      "Bash(curl:*://*password*)",
      "Bash(wget:*://*password*)"
    ]
  },
  "hooks": {
    "userPromptSubmitHook": {
      "command": "echo '⚡ Processing your request...' && echo '📊 Current status:' && git status --short 2>/dev/null || echo 'Not a git repo' && echo '📝 Latest commit:' && git log -1 --oneline 2>/dev/null || echo 'No commits yet'",
      "description": "요청 처리 시작 시 git 상태와 최신 커밋 자동 확인"
    },
    "preToolUseHook": {
      "Edit": {
        "command": "echo '✏️  Editing file: $FILE_PATH' && echo '🔍 Current changes:' && git diff $FILE_PATH 2>/dev/null || echo 'No git changes'",
        "description": "파일 편집 전 현재 변경사항 확인"
      },
      "Write": {
        "command": "echo '📝 Creating new file: $FILE_PATH' && [ -f $FILE_PATH ] && echo '⚠️  File already exists!' || echo '✅ New file'",
        "description": "파일 생성 전 존재 여부 확인"
      },
      "Bash": {
        "command": "echo '🔧 Running command...' && git status --short 2>/dev/null | head -5 || true",
        "description": "Bash 실행 전 git 상태 확인"
      }
    },
    "postToolUseHook": {
      "Edit": {
        "command": "echo '✅ File edited successfully' && if [[ $FILE_PATH == *.py ]]; then echo '🐍 Checking PEP8...' && (ruff check $FILE_PATH 2>/dev/null || flake8 $FILE_PATH 2>/dev/null || echo '💡 Tip: Install ruff or flake8 for automatic PEP8 checking'); fi",
        "description": "파일 편집 후 확인 및 Python 파일은 PEP8 체크"
      },
      "Write": {
        "command": "echo '✅ File created successfully' && if [[ $FILE_PATH == *.py ]]; then echo '🐍 Checking PEP8...' && (ruff check $FILE_PATH 2>/dev/null || flake8 $FILE_PATH 2>/dev/null || echo '💡 Tip: Install ruff or flake8 for automatic PEP8 checking'); fi",
        "description": "파일 생성 후 확인 및 Python 파일은 PEP8 체크"
      },
      "Bash": {
        "command": "echo '🔧 Command executed'",
        "description": "Bash 명령 실행 후 알림"
      }
    }
  },
  "customInstructions": "이 프로젝트는 Claude Code 연습용 프로젝트입니다. 한국어로 응답해주세요.\n\n중요: 코드 작성이나 라이브러리 사용 전에 반드시 다음을 확인하세요:\n1. 웹 검색(WebSearch)으로 최신 라이브러리 버전 및 설치 방법 확인\n2. 공식 문서에서 최신 API 및 사용법 확인 (WebFetch 활용)\n3. 현재 시점의 베스트 프랙티스와 권장 패턴 검색\n4. 가장 최신 정보를 바탕으로 개발\n\n절대 오래된 정보나 deprecated된 방법을 사용하지 마세요.\n\nPython 코드 작성 규칙:\n- 모든 Python 코드는 PEP8 스타일 가이드를 엄격히 준수할 것\n- 최대 줄 길이: 79자 (코드), 72자 (주석/docstring)\n- 들여쓰기: 스페이스 4칸\n- import 순서: 표준 라이브러리 > 서드파티 > 로컬\n- 함수/클래스에 타입 힌트 추가 권장\n- docstring 작성 (Google/NumPy 스타일)",
  "temperature": 0.7
}